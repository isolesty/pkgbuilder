#! /bin/bash

dquilt() {
    local quiltrc=${HOME}/.quiltrc-dpkg

    hasBin quilt || die "Install quilt!!!"

    if [[ ! -f $quiltrc ]] ; then
        info "Write quilt configuration: $quiltrc"

        cat <<'EOF' >>$quiltrc
d=. ; while [ ! -d $d/debian -a `readlink -e $d` != / ]; do d=$d/..; done
if [ -d $d/debian ] && [ -z $QUILT_PATCHES ]; then
    # if in Debian packaging tree with unset $QUILT_PATCHES
    QUILT_PATCHES="debian/patches"
    QUILT_PATCH_OPTS="--reject-format=unified"
    QUILT_DIFF_ARGS="-p ab --no-timestamps --no-index --color=auto"
    QUILT_REFRESH_ARGS="-p ab --no-timestamps --no-index"
    QUILT_COLORS="diff_hdr=1;32:diff_add=1;34:diff_rem=1;31:diff_hunk=1;33:diff_ctx=35:diff_cctx=33"
    if ! [ -d $d/debian/patches ]; then mkdir $d/debian/patches; fi
fi
EOF
    fi

    quilt --quiltrc=${quiltrc} -f $@
}

hasPbuilderChroot() {
    local pbuilderroot=${WORKBASE}/base.cow-${ARCH}

    if [[ -x ${pbuilderroot}/bin/ls ]] ; then
        return 0
    else
	if [[ -d ${pbuilderroot} ]] ; then
            warn "Incompleted pbuilder environment detected at ${pbuilderroot}"
            die "You should manually remove ${pbuilderroot} and run the script again"
	fi
        return 1
    fi
}

# taken from http://stackoverflow.com/questions/3183444/check-for-valid-link-url
checkValidURL() {
    regex='(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'
    if [[ $1 =~ $regex ]] ; then
        return 0
    else
        return 1
    fi
}

printBuildInfo() {
    local builder='None'

    [[ $do_build -eq 1 ]] && builder=dpkg-buildpackage
    [[ $usepbuilder -eq 1 ]] && builder=cowbuilder

    info "Build script version: $SVERSION"
cat <<EOF
We're building on architecture ${ARCH}:
    package:        ${package}
    changelog:      ${changelog}
    dsc:            ${dscurl}
    builder:        ${builder}
    maintianer:     ${DEBFULLNAME}
EOF
}

urlDecode() {
    if echo $1 | grep -qs % ; then
        echo -e "$(echo $1 | sed 's/+/ /g;s/%/\\x/g')"
    else
        echo $1
    fi
}

createWorkdir() {
    assert package
    workdir=${WORKBASE}/${package}
    createdir ${workdir} "work base"
}
