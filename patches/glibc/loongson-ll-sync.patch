--- a/sysdeps/mips/bits/atomic.h	2016-10-11 11:21:02.000000000 +0800
+++ b/sysdeps/mips/bits/atomic.h	2016-10-11 11:18:23.305145275 +0800
@@ -260,6 +260,7 @@
      MIPS_PUSH_MIPS2							      \
      rel	"\n"							      \
      "1:\t"								      \
+     "sync	\n\t"						     	      \
      "ll	%0,%5\n\t"						      \
      "move	%1,$0\n\t"						      \
      "bne	%0,%3,2f\n\t"						      \
@@ -268,7 +269,7 @@
      R10K_BEQZ_INSN"	%1,1b\n"					      \
      acq	"\n\t"							      \
      ".set	pop\n"							      \
-     "2:\n\t"								      \
+     "2:sync\n\t"								      \
 	      : "=&r" (__prev), "=&r" (__cmp), "=m" (*mem)		      \
 	      : "r" (oldval), "r" (newval), "m" (*mem)			      \
 	      : "memory")
@@ -284,6 +285,7 @@
      MIPS_PUSH_MIPS2							      \
      rel	"\n"							      \
      "1:\t"								      \
+     "sync	\n\t"						              \
      "lld	%0,%5\n\t"						      \
      "move	%1,$0\n\t"						      \
      "bne	%0,%3,2f\n\t"						      \
@@ -292,7 +294,7 @@
      R10K_BEQZ_INSN"	%1,1b\n"					      \
      acq	"\n\t"							      \
      ".set	pop\n"							      \
-     "2:\n\t"								      \
+     "2:sync\n\t"								      \
 	      : "=&r" (__prev), "=&r" (__cmp), "=m" (*mem)		      \
 	      : "r" (oldval), "r" (newval), "m" (*mem)			      \
 	      : "memory")
@@ -380,6 +382,7 @@
      MIPS_PUSH_MIPS2							      \
      rel	"\n"							      \
      "1:\t"								      \
+     "sync	\n\t"						              \
      "ll	%0,%4\n\t"						      \
      "move	%1,%3\n\t"						      \
      "sc	%1,%2\n\t"						      \
@@ -404,6 +407,7 @@
      MIPS_PUSH_MIPS2							      \
      rel	"\n"							      \
      "1:\n"								      \
+     "sync	\n\t"						              \
      "lld	%0,%4\n\t"						      \
      "move	%1,%3\n\t"						      \
      "scd	%1,%2\n\t"						      \
@@ -439,6 +443,7 @@
      MIPS_PUSH_MIPS2							      \
      rel	"\n"							      \
      "1:\t"								      \
+     "sync	\n\t"						              \
      "ll	%0,%4\n\t"						      \
      "addu	%1,%0,%3\n\t"						      \
      "sc	%1,%2\n\t"						      \
@@ -463,6 +468,7 @@
      MIPS_PUSH_MIPS2							      \
      rel	"\n"							      \
      "1:\t"								      \
+     "sync	\n\t"						              \
      "lld	%0,%4\n\t"						      \
      "daddu	%1,%0,%3\n\t"						      \
      "scd	%1,%2\n\t"						      \

--- a/sysdeps/mips/nptl/pthread_spin_init.c	1970-01-01 08:00:00.000000000 +0800
+++ b/sysdeps/mips/nptl/pthread_spin_init.c	2016-10-10 13:09:03.546560000 +0800
@@ -0,0 +1,43 @@
+/* pthread_spin_init -- initialize a spin lock.  Generic version.
+   Copyright (C) 2003-2014 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+   Contributed by Paul Mackerras <paulus@au.ibm.com>, 2003.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, see
+   <http://www.gnu.org/licenses/>.  */
+
+#include "pthreadP.h"
+
+int
+__pthread_spin_init (pthread_spinlock_t *lock, int pshared)
+{
+  /* *lock = 0; */
+
+  unsigned int tmp;
+  asm volatile (".set mips64 \n\t"
+  		"1:	\n\t"
+  		"sync	\n\t"
+  		"ll	%1, %2\n\t"
+  		"movn	%1, $0, %1\n\t"
+  		"sc	%1, %0\n\t"
+  		"beqz	%1, 1b\n\t"
+  		"nop	\n\t"
+  		".set mips0	\n\t"
+		: "=m" (*lock), "=r" (tmp)
+		: "m" (*lock)
+		: "memory");
+
+  return 0;
+}
+weak_alias (__pthread_spin_init, pthread_spin_init)

--- a/sysdeps/mips/nptl/pthread_spin_unlock.c	1970-01-01 08:00:00.000000000 +0800
+++ b/sysdeps/mips/nptl/pthread_spin_unlock.c	2016-10-10 13:09:03.546560000 +0800
@@ -0,0 +1,44 @@
+/* pthread_spin_unlock -- unlock a spin lock.  Generic version.
+   Copyright (C) 2003 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+   Contributed by Paul Mackerras <paulus@au.ibm.com>, 2003.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+#include "pthreadP.h"
+#include <atomic.h>
+
+int
+__pthread_spin_unlock (pthread_spinlock_t *lock)
+{
+  /* atomic_full_barrier (); */
+  /* *lock = 0; */
+  unsigned int tmp;
+  asm volatile (".set mips64 \n\t"
+  		"1:	\n\t"
+  		"sync	\n\t"
+  		"ll	%1, %2\n\t"
+  		"movn	%1, $0, %1\n\t"
+  		"sc	%1, %0\n\t"
+  		"beqz	%1, 1b\n\t"
+  		"nop	\n\t"
+  		".set mips0	\n\t"
+		: "=m" (*lock), "=r" (tmp)
+		: "m" (*lock)
+		: "memory");
+  return 0;
+}
+weak_alias (__pthread_spin_unlock, pthread_spin_unlock)

--- a/sysdeps/mips/sys/tas.h	2015-02-06 14:40:18.000000000 +0800
+++ b/sysdeps/mips/sys/tas.h	2016-10-11 11:18:55.085329982 +0800
@@ -46,6 +46,7 @@
 #endif
      "sync\n\t"
      "1:\n\t"
+     "sync\n\t"
      "ll	%0,%3\n\t"
      "move	%1,%4\n\t"
      "beq	%0,%4,2f\n\t"
@@ -53,7 +54,7 @@
      "beqz	%1,1b\n"
      "sync\n\t"
      ".set	pop\n\t"
-     "2:\n\t"
+     "2:sync\n\t"
      "/* End test and set */"
      : "=&r" (__r), "=&r" (__t), "=m" (*__p)
      : "m" (*__p), "r" (__v)
