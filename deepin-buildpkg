#! /bin/bash

set -e

declare -r scriptdir=$(dirname $(readlink -ef $0))

declare -ra modules=(
    conf/{env,dde,mirrors}
    lib/{common,utils,modules}
)

##########
# Real operation starts
##############################
for module in ${modules[@]}; do
    source ${scriptdir}/$module
done

[[ $EUID -eq 0 ]] && warn "You should build package with an unpriviledged user"

OPTS=$(getopt -n $0 \
        -o 'a:c:d:l:n:t:u:bhp' \
        --long arch:,cl:,dsc:,changelog:,package:,target-branch:,upload:,build,help,pbuilder \
        -- "$@")

[[ $? -eq 0 ]] || die "Sorry! I don't understand!!!"

eval set -- "${OPTS}"

while : ; do
    case $1 in
        -a|--arch)
            ARCH=$2
            shift 2
            ;;
        -c|--cl)
            CHANGELIST=$2
            [[ $CHANGELIST -eq 0 ]] && die "CL $CHANGELIST is illegal"
            shift 2
            ;;
        -d|--dsc)
            dscurl=$2
            shift 2
            ;;
        -l|--changelog)
            changelog=$2
            shift 2
            ;;
        -n|--package)
            package=$2
            shift 2
            ;;
        -t|--target-branch)
            targetbranch=$2
            shift 2
            ;;
        -u|--upload)
            uhost=$2
            shift 2
            ;;
        -b|--build)
            do_build=1
            shift
            ;;
        -p|--pbuilder)
            usepbuilder=1
            do_build=1
            shift
            ;;
        -h|--help)
            printHelp
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            printHelp
            shift
            ;;
    esac
done

contains ARCH ARCHITECTURES || die "$ARCH is an unsupported architecture"

source ${scriptdir}/conf/cowbuilder

# set default changelog
[[ -z $changelog ]] && changelog="Rebuild on ${ARCH}"

if [[ -n ${package} ]] ; then
    if contains package DEEPIN_PACKAGES ; then
	# it's a deepin package, so lets set up git repository
	createdir $REPOBASE
	repository=${BASEURI}/${package}
	case ${package} in
	    dde*|startdde|libdui)
		repository=${BASEURI}/dde/${package}
		;;
	    deepin-appstore|init-data)
		repository=${BASEURI}/dstore/${package}
		;;
	esac
	createSrcArchives
    else
	# not a deepin package, download source package from upstream
	downloadDebianSrcFromUpstream
    fi
elif [[ -n ${dscurl} ]] ; then
    downloadDebianSrc
fi

printBuildInfo
prepareBuild

createPbuilderChroot
# everything else beyond '--' in command line goes to buildPackage function
buildPackage $@
uploadArtifacts

# vim: number tabstop=4 softtabstop=4 expandtab
